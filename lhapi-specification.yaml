#    OpenAPI Specification for LH Public API
#    Copyright (C) 2016  Alexey Valikov

#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.

#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

swagger: '2.0'
info:
  version: "1"
  title: LH Public API
  description: Lufthansa API
  termsOfService: https://developer.lufthansa.com/General_Terms_and_Conditions
  contact:
    url: https://developer.lufthansa.com/contact
schemes:
  - https
host: api.lufthansa.com
basePath: /v1
consumes:
  - application/x-www-form-urlencoded
  - application/json
securityDefinitions:
  apiKey:
    type: apiKey
    in: header
    name: Authorization
#  oauth2:
#    type: oauth2
#    flow: accessCode
#    authorizationUrl: https://api.lufthansa.com/v1/oauth/token
#    scopes:
#      write:pets: modify pets in your account
#      read:pets: read your pets
paths:

  /oauth/token:
    post:
      description: Access to our services is controlled via tokens (Oauth 2.0). To get a token you must call our token end-point and supply your client key and client secret. Tokens remain valid for a limited time.
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        -
          name: client_id
          description: Your client application key
          in: formData
          required: true
          type: string
        -
          name: client_secret
          description: Your client secret
          in: formData
          required: true
          type: string
        -
          name: grant_type
          description: Grant type, must be "client_credentials"
          in: formData
          required: true
          type: string
          enum: ["client_credentials"]
      responses:
        200:
          description: Temporary access token
          schema:
            $ref: '#/definitions/access_token'

  /references/countries/:
    get:
      description: Retreive a list of all countries or details of one specific country. If a country is specified, there is an option to limit the response to a given language.
      security:
        -
          apiKey: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: lang
          description: Optional query parameter. 2 letter ISO 3166-1 language code.
          in: query
          required: true
          type: string
      responses:
        200:
          description: List of all countries or details of one specific country.
          schema: 
            $ref: '#/definitions/CountriesResponse'      

  /references/countries/{countryCode}:
    get:
      description: Retreive a list of all countries or details of one specific country. If a country is specified, there is an option to limit the response to a given language.
      security:
        -
          apiKey: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: countryCode
          description: Optional 2 letter ISO 3166-1 country code.
          in: path
          required: true
          type: string
        -
          name: lang
          description: Optional query parameter. 2 letter ISO 3166-1 language code.
          in: query
          required: true
          type: string
      responses:
        200:
          description: List of all countries or details of one specific country.
          schema: 
            $ref: '#/definitions/CountriesResponse'      

  /references/cities/:
    get:
      description: Retreive a list of all city or details of one specific city. If a city is specified, there is an option to limit the response to a given language.
      security:
        -
          apiKey: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: lang
          description: Optional query parameter. 2 letter ISO 3166-1 language code.
          in: query
          required: true
          type: string
      responses:
        200:
          description: List of all city or details of one specific city.
          schema: 
            $ref: '#/definitions/CitiesResponse'      

  /references/cities/{cityCode}:
    get:
      description: Retreive a list of all city or details of one specific city. If a city is specified, there is an option to limit the response to a given language.
      security:
        -
          apiKey: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: cityCode
          description: Optional 3 letter IATA city code
          in: path
          required: true
          type: string
        -
          name: lang
          description: Optional query parameter. 2 letter ISO 3166-1 language code.
          in: query
          required: true
          type: string
      responses:
        200:
          description: List of all city or details of one specific city.
          schema: 
            $ref: '#/definitions/CitiesResponse'      

  /references/airports/:
    get:
      description: Reference data about airports. With no parameters, all airports are returned in all languages. This is a large data set. If an airport code is specified there is the option to recieve the description in a single language.
      security:
        -
          apiKey: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: lang
          description: Optional query parameter. 2 letter ISO 3166-1 language code.
          in: query
          required: true
          type: string
        -
          name: LHoperated
          description: Optional query parameter. Restrict the results to locations with flights operated by LH (true, false).
          in: query
          required: true
          type: string
      responses:
        200:
          description: Reference data about airports.
          schema: 
            $ref: '#/definitions/AirportsResponse'      

  /references/airports/{airportCode}:
    get:
      description: Reference data about airports. With no parameters, all airports are returned in all languages. This is a large data set. If an airport code is specified there is the option to recieve the description in a single language.
      security:
        -
          apiKey: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: airportCode
          description: Optional 3 letter IATA airport code
          in: path
          required: true
          type: string
        -
          name: lang
          description: Optional query parameter. 2 letter ISO 3166-1 language code.
          in: query
          required: true
          type: string
        -
          name: LHoperated
          description: Optional query parameter. Restrict the results to locations with flights operated by LH (true, false).
          in: query
          required: true
          type: string
      responses:
        200:
          description: Reference data about airports.
          schema: 
            $ref: '#/definitions/AirportsResponse'      

  /references/airlines/:
    get:
      description: Reference data about airlines. With no parameters, all airlines are returned.
      security:
        -
          apiKey: []
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: Reference data about airlines.
          schema: 
            $ref: '#/definitions/AirlinesResponse'      

  /references/airlines/{airlineCode}:
    get:
      description: Reference data about airlines. With no parameters, all airlines are returned.
      security:
        -
          apiKey: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: airlineCode
          description: Optional 2-character IATA airline/carrier code
          in: path
          required: true
          type: string
      responses:
        200:
          description: Reference data about airlines.
          schema: 
            $ref: '#/definitions/AirlinesResponse'      

  /references/aircraft/{aircraftCode}:
    get:
      description: Reference data about aircraft. With no parameters, all aircraft types are returned.
      security:
        -
          apiKey: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: aircraftCode
          description: Optional 3-character IATA aircraft code.
          in: path
          required: true
          type: string
      responses:
        200:
          description: Reference data about aircraft.
          schema: 
            $ref: '#/definitions/AircraftSummariesResponse'      

  /references/aircraft/:
    get:
      description: Reference data about aircraft. With no parameters, all aircraft types are returned.
      security:
        -
          apiKey: []
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: Reference data about aircraft.
          schema: 
            $ref: '#/definitions/AircraftSummariesResponse'      

  /operations/flightstatus/departures/{airportCode}/{from}/{until}:
    get:
      description: The status of all departures from a given airport within a specific time range
      security:
        -
          apiKey: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: airportCode
          description: The IATA code of the departure airport (e.g. HAM)
          in: path
          required: true
          type: string
        -
          name: from
          description: Start of time range in local time of departure airport (e.g. 2014-11-18T10:30)
          in: path
          required: true
          type: string
        -
          name: until
          description: End of time range in local time of departure airport (e.g. 2014-11-18T12:30)
          in: path
          required: true
          type: string
      responses:
        200:
          description: The status of all departures from a given airport within a specific time range
          schema: 
            $ref: '#/definitions/FlightsStatusResponse'

  /operations/flightstatus/arrivals/{airportCode}/{from}/{until}:
    get:
      description: The status of all arrivals at a given airport within a specific time range
      security:
        -
          apiKey: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: airportCode
          description: The IATA code of the arrival airport (e.g. ZRH)
          in: path
          required: true
          type: string
        -
          name: from
          description: Start of time range in local time of arrival airport (e.g. 2014-11-18T10:30)
          in: path
          required: true
          type: string
        -
          name: until
          description: End of time range in local time of arrival airport (e.g. 2014-11-18T12:30)
          in: path
          required: true
          type: string
      responses:
        200:
          description: The status of all arrivals at a given airport within a specific time range
          schema: 
            $ref: '#/definitions/FlightsStatusResponse'
  
  /operations/flightstatus/{flightNumber}/{date}:
    get:
      description: Get the status of a particular flight (on time, landed, etc.)
      security:
        -
          apiKey: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: flightNumber
          description: The flight number including carrier code and any suffix, e.g. LH400
          in: path
          required: true
          type: string
        -
          name: date
          description: The departure date (YYYY-MM-DD) in the local time of the departure airport.
          in: path
          required: true
          type: string
      responses:
        200:
          description: The status of a particular flight (on time, landed, etc.)
          schema: 
            $ref: '#/definitions/FlightStatusResponse'

definitions:
  access_token:
    type: object
    required:
      - access_token
      - token_type
      - expires_in
    properties:
      access_token:
        type: string
        description: Your new access token
      token_type:
        type: string
        description: Type of the token. We only use bearer tokens. Note that we respond with token_type "bearer" (lower case b) yet when you send us a token it must be named "Bearer" (upper case B).
        enum:
          - bearer
      expires_in:
        type: integer
        format: int32
        description: The number of seconds until this token expires
  CountriesResponse:
    type: object
    required:
      - CountryResource
    properties:
      CountryResource:
        $ref: '#/definitions/CountryResource'
  CountryResource:
    type: object
    required:
      - Countries
    properties:
      Countries:
        $ref: '#/definitions/Countries'
  Countries:
    type: object
    required:
      - Country
    properties:
      Country:
        type: array
        items:
          $ref: '#/definitions/Country'
  Country:
    type: object
    required:
      - CountryCode
      - ZoneCode
      - Names
    properties:
      CountryCode:
        type: string
      ZoneCode:
        type: string
      Names:
        $ref: '#/definitions/Names'
  CitiesResponse:
    type: object
    required:
      - CityResource
    properties:
      CityResource:
        $ref: '#/definitions/CityResource'
  CityResource:
    type: object
    required:
      - Cities
    properties:
      Cities:
        $ref: '#/definitions/Cities'
  Cities:
    type: object
    required:
      - City
    properties:
      City:
        type: array
        items:
          $ref: '#/definitions/City'
  City:
    type: object
    required:
      - CityCode
      - CountryCode
      - Position
      - Names
      - Airports
    properties:
      CityCode:
        type: string
      CountryCode:
        type: string
      Position:
        $ref: '#/definitions/Position'
      Names:
        $ref: '#/definitions/Names'
      Airports:
        $ref: '#/definitions/AirportCodes'
  AirportsResponse:
    type: object
    required:
      - AirportResource
    properties:
      AirportResource:
        $ref: '#/definitions/AirportResource'
  AirportResource:
    type: object
    required:
      - Airports
    properties:
      Airports:
        $ref: '#/definitions/Airports'
  Airports:
    type: object
    required:
      - Airport
    properties:
      Airport:
        type: array
        items:
          $ref: '#/definitions/Airport'
  AirportCodes:
    type: object
    required:
      - AirportCode
    properties:
      AirportCode:
        type: array
        items:
          type: string
  Airport:
    type: object
    required:
      - AirportCode
      - CityCode
      - CountryCode
      - Position
      - Names
    properties:
      AirportCode:
        type: string
      CityCode:
        type: string
      CountryCode:
        type: string
      Position:
        $ref: '#/definitions/Position'
      Names:
        $ref: '#/definitions/Names'
  AirlinesResponse:
    type: object
    required:
      - AirlineResource
    properties:
      AirlineResource:
        $ref: '#/definitions/AirlineResource'
  AirlineResource:
    type: object
    required:
      - Airlines
    properties:
      Airlines:
        $ref: '#/definitions/Airlines'
  Airlines:
    type: object
    required:
      - Airline
    properties:
      Airline:
        type: array
        items:
          $ref: '#/definitions/Airline'
  Airline:
    type: object
    required:
      - OtherIDs
      - AirlineID
      - AirlineID_ICAO
      - Names
    properties:
      OtherIDs:
        $ref: '#/definitions/OtherIDs'
      AirlineID:
        type: string
      AirlineID_ICAO:
        type: string
      Names:
        $ref: '#/definitions/Names'
  OtherIDs:
    type: object
    required:
      - OtherID
    properties:
      OtherID:
        type: array
        items:
          $ref: '#/definitions/OtherID'
  OtherID:
    type: object
    required:
      - '@Description'
      - '$'
    properties:
      '@Description':
          type: string
      '$':
          type: string
  AircraftSummariesResponse:
    type: object
    required:
      - AircraftResource
    properties:
      AircraftResource:
        $ref: '#/definitions/AircraftResource'
  AircraftResource:
    type: object
    required:
      - AircraftSummaries
    properties:
      AircraftSummaries:
        $ref: '#/definitions/AircraftSummaries'
  AircraftSummaries:
    type: object
    required:
      - AircraftSummary
    properties:
      AircraftSummary:
        type: array
        items:
          $ref: '#/definitions/AircraftSummary'
  AircraftSummary:
    type: object
    required:
      - Names
      - AirlineEquipCode
      - MediaLinks
    properties:
      Names:
        $ref: '#/definitions/Names'
      AirlineEquipCode:
        type: string
      MediaLinks:
        $ref: '#/definitions/MediaLinks'
      Comments:
        $ref: '#/definitions/Comments'
  MediaLinks:
    type: object
    required:
      - MediaLink
    properties:
      MediaLink:
        type: array
        items:
          $ref: '#/definitions/MediaLink'
  MediaLink:
    type: object
    required:
      - '@LanguageCode'
      - '$'
    properties:
      '@LanguageCode':
        type: string
      '$':
        type: string
  Comments:
    type: object
    required:
      - Comment
    properties:
      Comment:
        type: array
        items:
          $ref: '#/definitions/Comment'
  Comment:
    type: object
    required:
      - '@LanguageCode'
      - '$'
    properties:
      '@LanguageCode':
        type: string
      '$':
        type: string
  Position:
    type: object
    required:
      - Coordinate
    properties:
      Coordinate:
        $ref: '#/definitions/Coordinate'
  Coordinate:
    type: object
    required:
      - Latitude
      - Longitude
    properties:
      Latitude:
          type: number
          format: double
      Longitude:
          type: number
          format: double
  Names:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/Name'
  Name:
    type: object
    required:
      - '@LanguageCode'
      - '$'
    properties:
      '@LanguageCode':
          type: string
      '$':
          type: string
  FlightsStatusResponse:
    type: object
    required:
      - FlightStatusResource
    properties:
      FlightStatusResource:
        $ref: '#/definitions/FlightsStatusResource'
  FlightStatusResponse:
    type: object
    required:
      - FlightStatusResource
    properties:
      FlightStatusResource:
        $ref: '#/definitions/FlightStatusResource'
  FlightsStatusResource:
    type: object
    required:
      - Flights
    properties:
      Flights:
        $ref: '#/definitions/Flights'
  FlightStatusResource:
    type: object
    required:
      - Flights
    properties:
      Flights:
        $ref: '#/definitions/SingularFlights'
  Flights:
    type: object
    required:
      - Flight
    properties:
      Flight:
        type: array
        items:
          $ref: '#/definitions/Flight'
  SingularFlights:
    type: object
    required:
      - Flight
    properties:
      Flight:
        $ref: '#/definitions/Flight'
  Flight:
    type: object
    required:
      - Departure
      - Arrival
      - MarketingCarrier
      - OperatingCarrier
      - Equipment
      - FlightStatus
    properties:
      Departure:
        $ref: '#/definitions/DepartureOrArrival'
      Arrival:
        $ref: '#/definitions/DepartureOrArrival'
      MarketingCarrier:
        $ref: '#/definitions/Carrier'
      OperatingCarrier:
        $ref: '#/definitions/Carrier'
      Equipment:
        $ref: '#/definitions/Equipment'
      FlightStatus:
        $ref: '#/definitions/FlightStatus'
  DepartureOrArrival:
    type: object
    required:
      - AirportCode
      - ScheduledTimeLocal
      - ScheduledTimeUTC
      - ActualTimeLocal
      - ActualTimeUTC
      - TimeStatus
      - Terminal
    properties:
      AirportCode:
        type: string
      ScheduledTimeLocal:
        $ref: '#/definitions/DateTimeObject'
      ScheduledTimeUTC:
        $ref: '#/definitions/DateTimeObject'
      ActualTimeLocal:
        $ref: '#/definitions/DateTimeObject'
      ActualTimeUTC:
        $ref: '#/definitions/DateTimeObject'
      EstimatedTimeLocal:
        $ref: '#/definitions/DateTimeObject'
      EstimatedTimeUTC:
        $ref: '#/definitions/DateTimeObject'
      TimeStatus:
        $ref: '#/definitions/TimeStatus'
      Terminal:
        $ref: '#/definitions/Terminal'
  Carrier:
    type: object
    required:
      - AirlineID
      - FlightNumber
    properties:
      AirlineID:
        type: string
      FlightNumber:
        type:
          integer
  Equipment:
    type: object
    required:
      - AircraftCode
    properties:
      AircraftCode:
        type:
          string
  FlightStatus:
    type: object
    required:
      - Code
      - Definition
    properties:
      Code:
        type: string
        enum:
          - CD # Flight Cancelled
          - DP # Flight Departed
          - LD # Flight Landed
          - RT # Flight Rerouted
          - NA # No status
      Definition:
        type: string
  DateTimeObject:
    type: object
    required:
      - DateTime
    properties:
      DateTime:
        $ref: '#/definitions/DateTime'
  DateTime:
    type: string
  TimeStatus:
    type: object
    required:
      - Code
      - Definition
    properties:
      Code:
        type: string
        enum:
          - FE # Flight Early
          - NI # Flight Early
          - OT # Flight On Time
          - DL # Flight Delayed
          - 'NO' # No status
      Definition:
        type: string
  Terminal:
    type: object
    required:
      - Name
      - Gate
    properties:
      Name:
        type: string
      Gate:
        type: string